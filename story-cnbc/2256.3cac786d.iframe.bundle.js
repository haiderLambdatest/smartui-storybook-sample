"use strict";(globalThis.webpackChunkfirecracker=globalThis.webpackChunkfirecracker||[]).push([[2256],{"./node_modules/d3-array/src/fsum.js":(J,S,a)=>{a.r(S),a.d(S,{Adder:()=>f,fcumsum:()=>o,fsum:()=>r});class f{constructor(){this._partials=new Float64Array(32),this._n=0}add(P){const u=this._partials;let e=0;for(let i=0;i<this._n&&i<32;i++){const n=u[i],t=P+n,s=Math.abs(P)<Math.abs(n)?P-(t-n):n-(t-P);s&&(u[e++]=s),P=t}return u[e]=P,this._n=e+1,this}valueOf(){const P=this._partials;let u=this._n,e,i,n,t=0;if(u>0){for(t=P[--u];u>0&&(e=t,i=P[--u],t=e+i,n=i-(t-e),!n););u>0&&(n<0&&P[u-1]<0||n>0&&P[u-1]>0)&&(i=n*2,e=t+i,i==e-t&&(t=e))}return t}}function r(j,P){const u=new f;if(P===void 0)for(let e of j)(e=+e)&&u.add(e);else{let e=-1;for(let i of j)(i=+P(i,++e,j))&&u.add(i)}return+u}function o(j,P){const u=new f;let e=-1;return Float64Array.from(j,P===void 0?i=>u.add(+i||0):i=>u.add(+P(i,++e,j)||0))}},"./node_modules/d3-array/src/merge.js":(J,S,a)=>{a.r(S),a.d(S,{default:()=>r});function*f(o){for(const j of o)yield*j}function r(o){return Array.from(f(o))}},"./node_modules/d3-geo/src/cartesian.js":(J,S,a)=>{a.r(S),a.d(S,{cartesian:()=>o,cartesianAddInPlace:()=>u,cartesianCross:()=>P,cartesianDot:()=>j,cartesianNormalizeInPlace:()=>i,cartesianScale:()=>e,spherical:()=>r});var f=a("./node_modules/d3-geo/src/math.js");function r(n){return[(0,f.atan2)(n[1],n[0]),(0,f.asin)(n[2])]}function o(n){var t=n[0],s=n[1],E=(0,f.cos)(s);return[E*(0,f.cos)(t),E*(0,f.sin)(t),(0,f.sin)(s)]}function j(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]}function P(n,t){return[n[1]*t[2]-n[2]*t[1],n[2]*t[0]-n[0]*t[2],n[0]*t[1]-n[1]*t[0]]}function u(n,t){n[0]+=t[0],n[1]+=t[1],n[2]+=t[2]}function e(n,t){return[n[0]*t,n[1]*t,n[2]*t]}function i(n){var t=(0,f.sqrt)(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]);n[0]/=t,n[1]/=t,n[2]/=t}},"./node_modules/d3-geo/src/circle.js":(J,S,a)=>{a.r(S),a.d(S,{circleStream:()=>P,default:()=>e});var f=a("./node_modules/d3-geo/src/cartesian.js");function r(i){return function(){return i}}var o=a("./node_modules/d3-geo/src/math.js"),j=a("./node_modules/d3-geo/src/rotation.js");function P(i,n,t,s,E,g){if(t){var y=(0,o.cos)(n),A=(0,o.sin)(n),m=s*t;E==null?(E=n+s*o.tau,g=n-m/2):(E=u(y,E),g=u(y,g),(s>0?E<g:E>g)&&(E+=s*o.tau));for(var p,d=E;s>0?d>g:d<g;d-=m)p=(0,f.spherical)([y,-A*(0,o.cos)(d),-A*(0,o.sin)(d)]),i.point(p[0],p[1])}}function u(i,n){n=(0,f.cartesian)(n),n[0]-=i,(0,f.cartesianNormalizeInPlace)(n);var t=(0,o.acos)(-n[1]);return((-n[2]<0?-t:t)+o.tau-o.epsilon)%o.tau}function e(){var i=r([0,0]),n=r(90),t=r(6),s,E,g={point:y};function y(m,p){s.push(m=E(m,p)),m[0]*=o.degrees,m[1]*=o.degrees}function A(){var m=i.apply(this,arguments),p=n.apply(this,arguments)*o.radians,d=t.apply(this,arguments)*o.radians;return s=[],E=(0,j.rotateRadians)(-m[0]*o.radians,-m[1]*o.radians,0).invert,P(g,p,d,1),m={type:"Polygon",coordinates:[s]},s=E=null,m}return A.center=function(m){return arguments.length?(i=typeof m=="function"?m:r([+m[0],+m[1]]),A):i},A.radius=function(m){return arguments.length?(n=typeof m=="function"?m:r(+m),A):n},A.precision=function(m){return arguments.length?(t=typeof m=="function"?m:r(+m),A):t},A}},"./node_modules/d3-geo/src/clip/antimeridian.js":(J,S,a)=>{a.r(S),a.d(S,{default:()=>o});var f=a("./node_modules/d3-geo/src/clip/index.js"),r=a("./node_modules/d3-geo/src/math.js");const o=(0,f.default)(function(){return!0},j,u,[-r.pi,-r.halfPi]);function j(e){var i=NaN,n=NaN,t=NaN,s;return{lineStart:function(){e.lineStart(),s=1},point:function(E,g){var y=E>0?r.pi:-r.pi,A=(0,r.abs)(E-i);(0,r.abs)(A-r.pi)<r.epsilon?(e.point(i,n=(n+g)/2>0?r.halfPi:-r.halfPi),e.point(t,n),e.lineEnd(),e.lineStart(),e.point(y,n),e.point(E,n),s=0):t!==y&&A>=r.pi&&((0,r.abs)(i-t)<r.epsilon&&(i-=t*r.epsilon),(0,r.abs)(E-y)<r.epsilon&&(E-=y*r.epsilon),n=P(i,n,E,g),e.point(t,n),e.lineEnd(),e.lineStart(),e.point(y,n),s=0),e.point(i=E,n=g),t=y},lineEnd:function(){e.lineEnd(),i=n=NaN},clean:function(){return 2-s}}}function P(e,i,n,t){var s,E,g=(0,r.sin)(e-n);return(0,r.abs)(g)>r.epsilon?(0,r.atan)(((0,r.sin)(i)*(E=(0,r.cos)(t))*(0,r.sin)(n)-(0,r.sin)(t)*(s=(0,r.cos)(i))*(0,r.sin)(e))/(s*E*g)):(i+t)/2}function u(e,i,n,t){var s;if(e==null)s=n*r.halfPi,t.point(-r.pi,s),t.point(0,s),t.point(r.pi,s),t.point(r.pi,0),t.point(r.pi,-s),t.point(0,-s),t.point(-r.pi,-s),t.point(-r.pi,0),t.point(-r.pi,s);else if((0,r.abs)(e[0]-i[0])>r.epsilon){var E=e[0]<i[0]?r.pi:-r.pi;s=n*E/2,t.point(-E,s),t.point(0,s),t.point(E,s)}else t.point(i[0],i[1])}},"./node_modules/d3-geo/src/clip/buffer.js":(J,S,a)=>{a.r(S),a.d(S,{default:()=>r});var f=a("./node_modules/d3-geo/src/noop.js");function r(){var o=[],j;return{point:function(P,u,e){j.push([P,u,e])},lineStart:function(){o.push(j=[])},lineEnd:f.default,rejoin:function(){o.length>1&&o.push(o.pop().concat(o.shift()))},result:function(){var P=o;return o=[],j=null,P}}}},"./node_modules/d3-geo/src/clip/circle.js":(J,S,a)=>{a.r(S),a.d(S,{default:()=>u});var f=a("./node_modules/d3-geo/src/cartesian.js"),r=a("./node_modules/d3-geo/src/circle.js"),o=a("./node_modules/d3-geo/src/math.js"),j=a("./node_modules/d3-geo/src/pointEqual.js"),P=a("./node_modules/d3-geo/src/clip/index.js");function u(e){var i=(0,o.cos)(e),n=6*o.radians,t=i>0,s=(0,o.abs)(i)>o.epsilon;function E(p,d,l,c){(0,r.circleStream)(c,e,n,l,p,d)}function g(p,d){return(0,o.cos)(p)*(0,o.cos)(d)>i}function y(p){var d,l,c,M,v;return{lineStart:function(){M=c=!1,v=1},point:function(h,I){var C=[h,I],R,B=g(h,I),$=t?B?0:m(h,I):B?m(h+(h<0?o.pi:-o.pi),I):0;if(!d&&(M=c=B)&&p.lineStart(),B!==c&&(R=A(d,C),(!R||(0,j.default)(d,R)||(0,j.default)(C,R))&&(C[2]=1)),B!==c)v=0,B?(p.lineStart(),R=A(C,d),p.point(R[0],R[1])):(R=A(d,C),p.point(R[0],R[1],2),p.lineEnd()),d=R;else if(s&&d&&t^B){var O;!($&l)&&(O=A(C,d,!0))&&(v=0,t?(p.lineStart(),p.point(O[0][0],O[0][1]),p.point(O[1][0],O[1][1]),p.lineEnd()):(p.point(O[1][0],O[1][1]),p.lineEnd(),p.lineStart(),p.point(O[0][0],O[0][1],3)))}B&&(!d||!(0,j.default)(d,C))&&p.point(C[0],C[1]),d=C,c=B,l=$},lineEnd:function(){c&&p.lineEnd(),d=null},clean:function(){return v|(M&&c)<<1}}}function A(p,d,l){var c=(0,f.cartesian)(p),M=(0,f.cartesian)(d),v=[1,0,0],h=(0,f.cartesianCross)(c,M),I=(0,f.cartesianDot)(h,h),C=h[0],R=I-C*C;if(!R)return!l&&p;var B=i*I/R,$=-i*C/R,O=(0,f.cartesianCross)(v,h),L=(0,f.cartesianScale)(v,B),X=(0,f.cartesianScale)(h,$);(0,f.cartesianAddInPlace)(L,X);var U=O,K=(0,f.cartesianDot)(L,U),Y=(0,f.cartesianDot)(U,U),Z=K*K-Y*((0,f.cartesianDot)(L,L)-1);if(!(Z<0)){var w=(0,o.sqrt)(Z),z=(0,f.cartesianScale)(U,(-K-w)/Y);if((0,f.cartesianAddInPlace)(z,L),z=(0,f.spherical)(z),!l)return z;var H=p[0],nn=d[0],_=p[1],N=d[1],G;nn<H&&(G=H,H=nn,nn=G);var x=nn-H,Q=(0,o.abs)(x-o.pi)<o.epsilon,rn=Q||x<o.epsilon;if(!Q&&N<_&&(G=_,_=N,N=G),rn?Q?_+N>0^z[1]<((0,o.abs)(z[0]-H)<o.epsilon?_:N):_<=z[1]&&z[1]<=N:x>o.pi^(H<=z[0]&&z[0]<=nn)){var V=(0,f.cartesianScale)(U,(-K+w)/Y);return(0,f.cartesianAddInPlace)(V,L),[z,(0,f.spherical)(V)]}}}function m(p,d){var l=t?e:o.pi-e,c=0;return p<-l?c|=1:p>l&&(c|=2),d<-l?c|=4:d>l&&(c|=8),c}return(0,P.default)(g,y,E,t?[0,-e]:[-o.pi,e-o.pi])}},"./node_modules/d3-geo/src/clip/index.js":(J,S,a)=>{a.r(S),a.d(S,{default:()=>u});var f=a("./node_modules/d3-geo/src/clip/buffer.js"),r=a("./node_modules/d3-geo/src/clip/rejoin.js"),o=a("./node_modules/d3-geo/src/math.js"),j=a("./node_modules/d3-geo/src/polygonContains.js"),P=a("./node_modules/d3-array/src/merge.js");function u(n,t,s,E){return function(g){var y=t(g),A=(0,f.default)(),m=t(A),p=!1,d,l,c,M={point:v,lineStart:I,lineEnd:C,polygonStart:function(){M.point=R,M.lineStart=B,M.lineEnd=$,l=[],d=[]},polygonEnd:function(){M.point=v,M.lineStart=I,M.lineEnd=C,l=(0,P.default)(l);var O=(0,j.default)(d,E);l.length?(p||(g.polygonStart(),p=!0),(0,r.default)(l,i,O,s,g)):O&&(p||(g.polygonStart(),p=!0),g.lineStart(),s(null,null,1,g),g.lineEnd()),p&&(g.polygonEnd(),p=!1),l=d=null},sphere:function(){g.polygonStart(),g.lineStart(),s(null,null,1,g),g.lineEnd(),g.polygonEnd()}};function v(O,L){n(O,L)&&g.point(O,L)}function h(O,L){y.point(O,L)}function I(){M.point=h,y.lineStart()}function C(){M.point=v,y.lineEnd()}function R(O,L){c.push([O,L]),m.point(O,L)}function B(){m.lineStart(),c=[]}function $(){R(c[0][0],c[0][1]),m.lineEnd();var O=m.clean(),L=A.result(),X,U=L.length,K,Y,Z;if(c.pop(),d.push(c),c=null,!!U){if(O&1){if(Y=L[0],(K=Y.length-1)>0){for(p||(g.polygonStart(),p=!0),g.lineStart(),X=0;X<K;++X)g.point((Z=Y[X])[0],Z[1]);g.lineEnd()}return}U>1&&O&2&&L.push(L.pop().concat(L.shift())),l.push(L.filter(e))}}return M}}function e(n){return n.length>1}function i(n,t){return((n=n.x)[0]<0?n[1]-o.halfPi-o.epsilon:o.halfPi-n[1])-((t=t.x)[0]<0?t[1]-o.halfPi-o.epsilon:o.halfPi-t[1])}},"./node_modules/d3-geo/src/clip/rectangle.js":(J,S,a)=>{a.r(S),a.d(S,{default:()=>i});var f=a("./node_modules/d3-geo/src/math.js"),r=a("./node_modules/d3-geo/src/clip/buffer.js");function o(n,t,s,E,g,y){var A=n[0],m=n[1],p=t[0],d=t[1],l=0,c=1,M=p-A,v=d-m,h;if(h=s-A,!(!M&&h>0)){if(h/=M,M<0){if(h<l)return;h<c&&(c=h)}else if(M>0){if(h>c)return;h>l&&(l=h)}if(h=g-A,!(!M&&h<0)){if(h/=M,M<0){if(h>c)return;h>l&&(l=h)}else if(M>0){if(h<l)return;h<c&&(c=h)}if(h=E-m,!(!v&&h>0)){if(h/=v,v<0){if(h<l)return;h<c&&(c=h)}else if(v>0){if(h>c)return;h>l&&(l=h)}if(h=y-m,!(!v&&h<0)){if(h/=v,v<0){if(h>c)return;h>l&&(l=h)}else if(v>0){if(h<l)return;h<c&&(c=h)}return l>0&&(n[0]=A+l*M,n[1]=m+l*v),c<1&&(t[0]=A+c*M,t[1]=m+c*v),!0}}}}}var j=a("./node_modules/d3-geo/src/clip/rejoin.js"),P=a("./node_modules/d3-array/src/merge.js"),u=1e9,e=-u;function i(n,t,s,E){function g(d,l){return n<=d&&d<=s&&t<=l&&l<=E}function y(d,l,c,M){var v=0,h=0;if(d==null||(v=A(d,c))!==(h=A(l,c))||p(d,l)<0^c>0)do M.point(v===0||v===3?n:s,v>1?E:t);while((v=(v+c+4)%4)!==h);else M.point(l[0],l[1])}function A(d,l){return(0,f.abs)(d[0]-n)<f.epsilon?l>0?0:3:(0,f.abs)(d[0]-s)<f.epsilon?l>0?2:1:(0,f.abs)(d[1]-t)<f.epsilon?l>0?1:0:l>0?3:2}function m(d,l){return p(d.x,l.x)}function p(d,l){var c=A(d,1),M=A(l,1);return c!==M?c-M:c===0?l[1]-d[1]:c===1?d[0]-l[0]:c===2?d[1]-l[1]:l[0]-d[0]}return function(d){var l=d,c=(0,r.default)(),M,v,h,I,C,R,B,$,O,L,X,U={point:K,lineStart:z,lineEnd:H,polygonStart:Z,polygonEnd:w};function K(_,N){g(_,N)&&l.point(_,N)}function Y(){for(var _=0,N=0,G=v.length;N<G;++N)for(var x=v[N],Q=1,rn=x.length,V=x[0],k,tn,F=V[0],sn=V[1];Q<rn;++Q)k=F,tn=sn,V=x[Q],F=V[0],sn=V[1],tn<=E?sn>E&&(F-k)*(E-tn)>(sn-tn)*(n-k)&&++_:sn<=E&&(F-k)*(E-tn)<(sn-tn)*(n-k)&&--_;return _}function Z(){l=c,M=[],v=[],X=!0}function w(){var _=Y(),N=X&&_,G=(M=(0,P.default)(M)).length;(N||G)&&(d.polygonStart(),N&&(d.lineStart(),y(null,null,1,d),d.lineEnd()),G&&(0,j.default)(M,m,_,y,d),d.polygonEnd()),l=d,M=v=h=null}function z(){U.point=nn,v&&v.push(h=[]),L=!0,O=!1,B=$=NaN}function H(){M&&(nn(I,C),R&&O&&c.rejoin(),M.push(c.result())),U.point=K,O&&l.lineEnd()}function nn(_,N){var G=g(_,N);if(v&&h.push([_,N]),L)I=_,C=N,R=G,L=!1,G&&(l.lineStart(),l.point(_,N));else if(G&&O)l.point(_,N);else{var x=[B=Math.max(e,Math.min(u,B)),$=Math.max(e,Math.min(u,$))],Q=[_=Math.max(e,Math.min(u,_)),N=Math.max(e,Math.min(u,N))];o(x,Q,n,t,s,E)?(O||(l.lineStart(),l.point(x[0],x[1])),l.point(Q[0],Q[1]),G||l.lineEnd(),X=!1):G&&(l.lineStart(),l.point(_,N),X=!1)}B=_,$=N,O=G}return U}}},"./node_modules/d3-geo/src/clip/rejoin.js":(J,S,a)=>{a.r(S),a.d(S,{default:()=>j});var f=a("./node_modules/d3-geo/src/pointEqual.js"),r=a("./node_modules/d3-geo/src/math.js");function o(u,e,i,n){this.x=u,this.z=e,this.o=i,this.e=n,this.v=!1,this.n=this.p=null}function j(u,e,i,n,t){var s=[],E=[],g,y;if(u.forEach(function(c){if(!((M=c.length-1)<=0)){var M,v=c[0],h=c[M],I;if((0,f.default)(v,h)){if(!v[2]&&!h[2]){for(t.lineStart(),g=0;g<M;++g)t.point((v=c[g])[0],v[1]);t.lineEnd();return}h[0]+=2*r.epsilon}s.push(I=new o(v,c,null,!0)),E.push(I.o=new o(v,null,I,!1)),s.push(I=new o(h,c,null,!1)),E.push(I.o=new o(h,null,I,!0))}}),!!s.length){for(E.sort(e),P(s),P(E),g=0,y=E.length;g<y;++g)E[g].e=i=!i;for(var A=s[0],m,p;;){for(var d=A,l=!0;d.v;)if((d=d.n)===A)return;m=d.z,t.lineStart();do{if(d.v=d.o.v=!0,d.e){if(l)for(g=0,y=m.length;g<y;++g)t.point((p=m[g])[0],p[1]);else n(d.x,d.n.x,1,t);d=d.n}else{if(l)for(m=d.p.z,g=m.length-1;g>=0;--g)t.point((p=m[g])[0],p[1]);else n(d.x,d.p.x,-1,t);d=d.p}d=d.o,m=d.z,l=!l}while(!d.v);t.lineEnd()}}}function P(u){if(e=u.length){for(var e,i=0,n=u[0],t;++i<e;)n.n=t=u[i],t.p=n,n=t;n.n=t=u[0],t.p=n}}},"./node_modules/d3-geo/src/compose.js":(J,S,a)=>{a.r(S),a.d(S,{default:()=>f});function f(r,o){function j(P,u){return P=r(P,u),o(P[0],P[1])}return r.invert&&o.invert&&(j.invert=function(P,u){return P=o.invert(P,u),P&&r.invert(P[0],P[1])}),j}},"./node_modules/d3-geo/src/identity.js":(J,S,a)=>{a.r(S),a.d(S,{default:()=>f});const f=r=>r},"./node_modules/d3-geo/src/math.js":(J,S,a)=>{a.r(S),a.d(S,{abs:()=>n,acos:()=>h,asin:()=>I,atan:()=>t,atan2:()=>s,ceil:()=>g,cos:()=>E,degrees:()=>e,epsilon:()=>f,epsilon2:()=>r,exp:()=>y,floor:()=>A,halfPi:()=>j,haversin:()=>C,hypot:()=>m,log:()=>p,pi:()=>o,pow:()=>d,quarterPi:()=>P,radians:()=>i,sign:()=>c,sin:()=>l,sqrt:()=>M,tan:()=>v,tau:()=>u});var f=1e-6,r=1e-12,o=Math.PI,j=o/2,P=o/4,u=o*2,e=180/o,i=o/180,n=Math.abs,t=Math.atan,s=Math.atan2,E=Math.cos,g=Math.ceil,y=Math.exp,A=Math.floor,m=Math.hypot,p=Math.log,d=Math.pow,l=Math.sin,c=Math.sign||function(R){return R>0?1:R<0?-1:0},M=Math.sqrt,v=Math.tan;function h(R){return R>1?0:R<-1?o:Math.acos(R)}function I(R){return R>1?j:R<-1?-j:Math.asin(R)}function C(R){return(R=l(R/2))*R}},"./node_modules/d3-geo/src/noop.js":(J,S,a)=>{a.r(S),a.d(S,{default:()=>f});function f(){}},"./node_modules/d3-geo/src/path/bounds.js":(J,S,a)=>{a.r(S),a.d(S,{default:()=>i});var f=a("./node_modules/d3-geo/src/noop.js"),r=1/0,o=r,j=-r,P=j,u={point:e,lineStart:f.default,lineEnd:f.default,polygonStart:f.default,polygonEnd:f.default,result:function(){var n=[[r,o],[j,P]];return j=P=-(o=r=1/0),n}};function e(n,t){n<r&&(r=n),n>j&&(j=n),t<o&&(o=t),t>P&&(P=t)}const i=u},"./node_modules/d3-geo/src/path/index.js":(J,S,a)=>{a.r(S),a.d(S,{default:()=>Pn});var f=a("./node_modules/d3-geo/src/identity.js"),r=a("./node_modules/d3-geo/src/stream.js"),o=a("./node_modules/d3-array/src/fsum.js"),j=a("./node_modules/d3-geo/src/math.js"),P=a("./node_modules/d3-geo/src/noop.js"),u=new o.Adder,e=new o.Adder,i,n,t,s,E={point:P.default,lineStart:P.default,lineEnd:P.default,polygonStart:function(){E.lineStart=g,E.lineEnd=m},polygonEnd:function(){E.lineStart=E.lineEnd=E.point=P.default,u.add((0,j.abs)(e)),e=new o.Adder},result:function(){var W=u/2;return u=new o.Adder,W}};function g(){E.point=y}function y(W,T){E.point=A,i=t=W,n=s=T}function A(W,T){e.add(s*W-t*T),t=W,s=T}function m(){A(i,n)}const p=E;var d=a("./node_modules/d3-geo/src/path/bounds.js"),l=0,c=0,M=0,v=0,h=0,I=0,C=0,R=0,B=0,$,O,L,X,U={point:K,lineStart:Y,lineEnd:z,polygonStart:function(){U.lineStart=H,U.lineEnd=nn},polygonEnd:function(){U.point=K,U.lineStart=Y,U.lineEnd=z},result:function(){var W=B?[C/B,R/B]:I?[v/I,h/I]:M?[l/M,c/M]:[NaN,NaN];return l=c=M=v=h=I=C=R=B=0,W}};function K(W,T){l+=W,c+=T,++M}function Y(){U.point=Z}function Z(W,T){U.point=w,K(L=W,X=T)}function w(W,T){var on=W-L,en=T-X,b=(0,j.sqrt)(on*on+en*en);v+=b*(L+W)/2,h+=b*(X+T)/2,I+=b,K(L=W,X=T)}function z(){U.point=K}function H(){U.point=_}function nn(){N($,O)}function _(W,T){U.point=N,K($=L=W,O=X=T)}function N(W,T){var on=W-L,en=T-X,b=(0,j.sqrt)(on*on+en*en);v+=b*(L+W)/2,h+=b*(X+T)/2,I+=b,b=X*W-L*T,C+=b*(L+W),R+=b*(X+T),B+=b*3,K(L=W,X=T)}const G=U;function x(W){this._context=W}x.prototype={_radius:4.5,pointRadius:function(W){return this._radius=W,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){this._line===0&&this._context.closePath(),this._point=NaN},point:function(W,T){switch(this._point){case 0:{this._context.moveTo(W,T),this._point=1;break}case 1:{this._context.lineTo(W,T);break}default:{this._context.moveTo(W+this._radius,T),this._context.arc(W,T,this._radius,0,j.tau);break}}},result:P.default};var Q=new o.Adder,rn,V,k,tn,F,sn={point:P.default,lineStart:function(){sn.point=un},lineEnd:function(){rn&&ln(V,k),sn.point=P.default},polygonStart:function(){rn=!0},polygonEnd:function(){rn=null},result:function(){var W=+Q;return Q=new o.Adder,W}};function un(W,T){sn.point=ln,V=tn=W,k=F=T}function ln(W,T){tn-=W,F-=T,Q.add((0,j.sqrt)(tn*tn+F*F)),tn=W,F=T}const D=sn;let fn,cn,pn,hn;class gn{constructor(T){this._append=T==null?vn:mn(T),this._radius=4.5,this._=""}pointRadius(T){return this._radius=+T,this}polygonStart(){this._line=0}polygonEnd(){this._line=NaN}lineStart(){this._point=0}lineEnd(){this._line===0&&(this._+="Z"),this._point=NaN}point(T,on){switch(this._point){case 0:{this._append`M${T},${on}`,this._point=1;break}case 1:{this._append`L${T},${on}`;break}default:{if(this._append`M${T},${on}`,this._radius!==pn||this._append!==cn){const en=this._radius,b=this._;this._="",this._append`m0,${en}a${en},${en} 0 1,1 0,${-2*en}a${en},${en} 0 1,1 0,${2*en}z`,pn=en,cn=this._append,hn=this._,this._=b}this._+=hn;break}}}result(){const T=this._;return this._="",T.length?T:null}}function vn(W){let T=1;this._+=W[0];for(const on=W.length;T<on;++T)this._+=arguments[T]+W[T]}function mn(W){const T=Math.floor(W);if(!(T>=0))throw new RangeError(`invalid digits: ${W}`);if(T>15)return vn;if(T!==fn){const on=10**T;fn=T,cn=function(b){let dn=1;this._+=b[0];for(const an=b.length;dn<an;++dn)this._+=Math.round(arguments[dn]*on)/on+b[dn]}}return cn}function Pn(W,T){let on=3,en=4.5,b,dn;function an(q){return q&&(typeof en=="function"&&dn.pointRadius(+en.apply(this,arguments)),(0,r.default)(q,b(dn))),dn.result()}return an.area=function(q){return(0,r.default)(q,b(p)),p.result()},an.measure=function(q){return(0,r.default)(q,b(D)),D.result()},an.bounds=function(q){return(0,r.default)(q,b(d.default)),d.default.result()},an.centroid=function(q){return(0,r.default)(q,b(G)),G.result()},an.projection=function(q){return arguments.length?(b=q==null?(W=null,f.default):(W=q).stream,an):W},an.context=function(q){return arguments.length?(dn=q==null?(T=null,new gn(on)):new x(T=q),typeof en!="function"&&dn.pointRadius(en),an):T},an.pointRadius=function(q){return arguments.length?(en=typeof q=="function"?q:(dn.pointRadius(+q),+q),an):en},an.digits=function(q){if(!arguments.length)return on;if(q==null)on=null;else{const En=Math.floor(q);if(!(En>=0))throw new RangeError(`invalid digits: ${q}`);on=En}return T===null&&(dn=new gn(on)),an},an.projection(W).digits(on).context(T)}},"./node_modules/d3-geo/src/pointEqual.js":(J,S,a)=>{a.r(S),a.d(S,{default:()=>r});var f=a("./node_modules/d3-geo/src/math.js");function r(o,j){return(0,f.abs)(o[0]-j[0])<f.epsilon&&(0,f.abs)(o[1]-j[1])<f.epsilon}},"./node_modules/d3-geo/src/polygonContains.js":(J,S,a)=>{a.r(S),a.d(S,{default:()=>P});var f=a("./node_modules/d3-array/src/fsum.js"),r=a("./node_modules/d3-geo/src/cartesian.js"),o=a("./node_modules/d3-geo/src/math.js");function j(u){return(0,o.abs)(u[0])<=o.pi?u[0]:(0,o.sign)(u[0])*(((0,o.abs)(u[0])+o.pi)%o.tau-o.pi)}function P(u,e){var i=j(e),n=e[1],t=(0,o.sin)(n),s=[(0,o.sin)(i),-(0,o.cos)(i),0],E=0,g=0,y=new f.Adder;t===1?n=o.halfPi+o.epsilon:t===-1&&(n=-o.halfPi-o.epsilon);for(var A=0,m=u.length;A<m;++A)if(d=(p=u[A]).length)for(var p,d,l=p[d-1],c=j(l),M=l[1]/2+o.quarterPi,v=(0,o.sin)(M),h=(0,o.cos)(M),I=0;I<d;++I,c=R,v=$,h=O,l=C){var C=p[I],R=j(C),B=C[1]/2+o.quarterPi,$=(0,o.sin)(B),O=(0,o.cos)(B),L=R-c,X=L>=0?1:-1,U=X*L,K=U>o.pi,Y=v*$;if(y.add((0,o.atan2)(Y*X*(0,o.sin)(U),h*O+Y*(0,o.cos)(U))),E+=K?L+X*o.tau:L,K^c>=i^R>=i){var Z=(0,r.cartesianCross)((0,r.cartesian)(l),(0,r.cartesian)(C));(0,r.cartesianNormalizeInPlace)(Z);var w=(0,r.cartesianCross)(s,Z);(0,r.cartesianNormalizeInPlace)(w);var z=(K^L>=0?-1:1)*(0,o.asin)(w[2]);(n>z||n===z&&(Z[0]||Z[1]))&&(g+=K^L>=0?1:-1)}}return(E<-o.epsilon||E<o.epsilon&&y<-o.epsilon2)^g&1}},"./node_modules/d3-geo/src/projection/albers.js":(J,S,a)=>{a.r(S),a.d(S,{default:()=>r});var f=a("./node_modules/d3-geo/src/projection/conicEqualArea.js");function r(){return(0,f.default)().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])}},"./node_modules/d3-geo/src/projection/albersUsa.js":(J,S,a)=>{a.r(S),a.d(S,{default:()=>u});var f=a("./node_modules/d3-geo/src/math.js"),r=a("./node_modules/d3-geo/src/projection/albers.js"),o=a("./node_modules/d3-geo/src/projection/conicEqualArea.js"),j=a("./node_modules/d3-geo/src/projection/fit.js");function P(e){var i=e.length;return{point:function(n,t){for(var s=-1;++s<i;)e[s].point(n,t)},sphere:function(){for(var n=-1;++n<i;)e[n].sphere()},lineStart:function(){for(var n=-1;++n<i;)e[n].lineStart()},lineEnd:function(){for(var n=-1;++n<i;)e[n].lineEnd()},polygonStart:function(){for(var n=-1;++n<i;)e[n].polygonStart()},polygonEnd:function(){for(var n=-1;++n<i;)e[n].polygonEnd()}}}function u(){var e,i,n=(0,r.default)(),t,s=(0,o.default)().rotate([154,0]).center([-2,58.5]).parallels([55,65]),E,g=(0,o.default)().rotate([157,0]).center([-3,19.9]).parallels([8,18]),y,A,m={point:function(l,c){A=[l,c]}};function p(l){var c=l[0],M=l[1];return A=null,t.point(c,M),A||(E.point(c,M),A)||(y.point(c,M),A)}p.invert=function(l){var c=n.scale(),M=n.translate(),v=(l[0]-M[0])/c,h=(l[1]-M[1])/c;return(h>=.12&&h<.234&&v>=-.425&&v<-.214?s:h>=.166&&h<.234&&v>=-.214&&v<-.115?g:n).invert(l)},p.stream=function(l){return e&&i===l?e:e=P([n.stream(i=l),s.stream(l),g.stream(l)])},p.precision=function(l){return arguments.length?(n.precision(l),s.precision(l),g.precision(l),d()):n.precision()},p.scale=function(l){return arguments.length?(n.scale(l),s.scale(l*.35),g.scale(l),p.translate(n.translate())):n.scale()},p.translate=function(l){if(!arguments.length)return n.translate();var c=n.scale(),M=+l[0],v=+l[1];return t=n.translate(l).clipExtent([[M-.455*c,v-.238*c],[M+.455*c,v+.238*c]]).stream(m),E=s.translate([M-.307*c,v+.201*c]).clipExtent([[M-.425*c+f.epsilon,v+.12*c+f.epsilon],[M-.214*c-f.epsilon,v+.234*c-f.epsilon]]).stream(m),y=g.translate([M-.205*c,v+.212*c]).clipExtent([[M-.214*c+f.epsilon,v+.166*c+f.epsilon],[M-.115*c-f.epsilon,v+.234*c-f.epsilon]]).stream(m),d()},p.fitExtent=function(l,c){return(0,j.fitExtent)(p,l,c)},p.fitSize=function(l,c){return(0,j.fitSize)(p,l,c)},p.fitWidth=function(l,c){return(0,j.fitWidth)(p,l,c)},p.fitHeight=function(l,c){return(0,j.fitHeight)(p,l,c)};function d(){return e=i=null,p}return p.scale(1070)}},"./node_modules/d3-geo/src/projection/conic.js":(J,S,a)=>{a.r(S),a.d(S,{conicProjection:()=>o});var f=a("./node_modules/d3-geo/src/math.js"),r=a("./node_modules/d3-geo/src/projection/index.js");function o(j){var P=0,u=f.pi/3,e=(0,r.projectionMutator)(j),i=e(P,u);return i.parallels=function(n){return arguments.length?e(P=n[0]*f.radians,u=n[1]*f.radians):[P*f.degrees,u*f.degrees]},i}},"./node_modules/d3-geo/src/projection/conicEqualArea.js":(J,S,a)=>{a.r(S),a.d(S,{conicEqualAreaRaw:()=>j,default:()=>P});var f=a("./node_modules/d3-geo/src/math.js"),r=a("./node_modules/d3-geo/src/projection/conic.js");function o(u){var e=(0,f.cos)(u);function i(n,t){return[n*e,(0,f.sin)(t)/e]}return i.invert=function(n,t){return[n/e,(0,f.asin)(t*e)]},i}function j(u,e){var i=(0,f.sin)(u),n=(i+(0,f.sin)(e))/2;if((0,f.abs)(n)<f.epsilon)return o(u);var t=1+i*(2*n-i),s=(0,f.sqrt)(t)/n;function E(g,y){var A=(0,f.sqrt)(t-2*n*(0,f.sin)(y))/n;return[A*(0,f.sin)(g*=n),s-A*(0,f.cos)(g)]}return E.invert=function(g,y){var A=s-y,m=(0,f.atan2)(g,(0,f.abs)(A))*(0,f.sign)(A);return A*n<0&&(m-=f.pi*(0,f.sign)(g)*(0,f.sign)(A)),[m/n,(0,f.asin)((t-(g*g+A*A)*n*n)/(2*n))]},E}function P(){return(0,r.conicProjection)(j).scale(155.424).center([0,33.6442])}},"./node_modules/d3-geo/src/projection/fit.js":(J,S,a)=>{a.r(S),a.d(S,{fitExtent:()=>j,fitHeight:()=>e,fitSize:()=>P,fitWidth:()=>u});var f=a("./node_modules/d3-geo/src/stream.js"),r=a("./node_modules/d3-geo/src/path/bounds.js");function o(i,n,t){var s=i.clipExtent&&i.clipExtent();return i.scale(150).translate([0,0]),s!=null&&i.clipExtent(null),(0,f.default)(t,i.stream(r.default)),n(r.default.result()),s!=null&&i.clipExtent(s),i}function j(i,n,t){return o(i,function(s){var E=n[1][0]-n[0][0],g=n[1][1]-n[0][1],y=Math.min(E/(s[1][0]-s[0][0]),g/(s[1][1]-s[0][1])),A=+n[0][0]+(E-y*(s[1][0]+s[0][0]))/2,m=+n[0][1]+(g-y*(s[1][1]+s[0][1]))/2;i.scale(150*y).translate([A,m])},t)}function P(i,n,t){return j(i,[[0,0],n],t)}function u(i,n,t){return o(i,function(s){var E=+n,g=E/(s[1][0]-s[0][0]),y=(E-g*(s[1][0]+s[0][0]))/2,A=-g*s[0][1];i.scale(150*g).translate([y,A])},t)}function e(i,n,t){return o(i,function(s){var E=+n,g=E/(s[1][1]-s[0][1]),y=-g*s[0][0],A=(E-g*(s[1][1]+s[0][1]))/2;i.scale(150*g).translate([y,A])},t)}},"./node_modules/d3-geo/src/projection/index.js":(J,S,a)=>{a.r(S),a.d(S,{default:()=>c,projectionMutator:()=>M});var f=a("./node_modules/d3-geo/src/clip/antimeridian.js"),r=a("./node_modules/d3-geo/src/clip/circle.js"),o=a("./node_modules/d3-geo/src/clip/rectangle.js"),j=a("./node_modules/d3-geo/src/compose.js"),P=a("./node_modules/d3-geo/src/identity.js"),u=a("./node_modules/d3-geo/src/math.js"),e=a("./node_modules/d3-geo/src/rotation.js"),i=a("./node_modules/d3-geo/src/transform.js"),n=a("./node_modules/d3-geo/src/projection/fit.js"),t=a("./node_modules/d3-geo/src/cartesian.js"),s=16,E=(0,u.cos)(30*u.radians);function g(v,h){return+h?A(v,h):y(v)}function y(v){return(0,i.transformer)({point:function(h,I){h=v(h,I),this.stream.point(h[0],h[1])}})}function A(v,h){function I(C,R,B,$,O,L,X,U,K,Y,Z,w,z,H){var nn=X-C,_=U-R,N=nn*nn+_*_;if(N>4*h&&z--){var G=$+Y,x=O+Z,Q=L+w,rn=(0,u.sqrt)(G*G+x*x+Q*Q),V=(0,u.asin)(Q/=rn),k=(0,u.abs)((0,u.abs)(Q)-1)<u.epsilon||(0,u.abs)(B-K)<u.epsilon?(B+K)/2:(0,u.atan2)(x,G),tn=v(k,V),F=tn[0],sn=tn[1],un=F-C,ln=sn-R,D=_*un-nn*ln;(D*D/N>h||(0,u.abs)((nn*un+_*ln)/N-.5)>.3||$*Y+O*Z+L*w<E)&&(I(C,R,B,$,O,L,F,sn,k,G/=rn,x/=rn,Q,z,H),H.point(F,sn),I(F,sn,k,G,x,Q,X,U,K,Y,Z,w,z,H))}}return function(C){var R,B,$,O,L,X,U,K,Y,Z,w,z,H={point:nn,lineStart:_,lineEnd:G,polygonStart:function(){C.polygonStart(),H.lineStart=x},polygonEnd:function(){C.polygonEnd(),H.lineStart=_}};function nn(V,k){V=v(V,k),C.point(V[0],V[1])}function _(){K=NaN,H.point=N,C.lineStart()}function N(V,k){var tn=(0,t.cartesian)([V,k]),F=v(V,k);I(K,Y,U,Z,w,z,K=F[0],Y=F[1],U=V,Z=tn[0],w=tn[1],z=tn[2],s,C),C.point(K,Y)}function G(){H.point=nn,C.lineEnd()}function x(){_(),H.point=Q,H.lineEnd=rn}function Q(V,k){N(R=V,k),B=K,$=Y,O=Z,L=w,X=z,H.point=N}function rn(){I(K,Y,U,Z,w,z,B,$,R,O,L,X,s,C),H.lineEnd=G,G()}return H}}var m=(0,i.transformer)({point:function(v,h){this.stream.point(v*u.radians,h*u.radians)}});function p(v){return(0,i.transformer)({point:function(h,I){var C=v(h,I);return this.stream.point(C[0],C[1])}})}function d(v,h,I,C,R){function B($,O){return $*=C,O*=R,[h+v*$,I-v*O]}return B.invert=function($,O){return[($-h)/v*C,(I-O)/v*R]},B}function l(v,h,I,C,R,B){if(!B)return d(v,h,I,C,R);var $=(0,u.cos)(B),O=(0,u.sin)(B),L=$*v,X=O*v,U=$/v,K=O/v,Y=(O*I-$*h)/v,Z=(O*h+$*I)/v;function w(z,H){return z*=C,H*=R,[L*z-X*H+h,I-X*z-L*H]}return w.invert=function(z,H){return[C*(U*z-K*H+Y),R*(Z-K*z-U*H)]},w}function c(v){return M(function(){return v})()}function M(v){var h,I=150,C=480,R=250,B=0,$=0,O=0,L=0,X=0,U,K=0,Y=1,Z=1,w=null,z=f.default,H=null,nn,_,N,G=P.default,x=.5,Q,rn,V,k,tn;function F(D){return V(D[0]*u.radians,D[1]*u.radians)}function sn(D){return D=V.invert(D[0],D[1]),D&&[D[0]*u.degrees,D[1]*u.degrees]}F.stream=function(D){return k&&tn===D?k:k=m(p(U)(z(Q(G(tn=D)))))},F.preclip=function(D){return arguments.length?(z=D,w=void 0,ln()):z},F.postclip=function(D){return arguments.length?(G=D,H=nn=_=N=null,ln()):G},F.clipAngle=function(D){return arguments.length?(z=+D?(0,r.default)(w=D*u.radians):(w=null,f.default),ln()):w*u.degrees},F.clipExtent=function(D){return arguments.length?(G=D==null?(H=nn=_=N=null,P.default):(0,o.default)(H=+D[0][0],nn=+D[0][1],_=+D[1][0],N=+D[1][1]),ln()):H==null?null:[[H,nn],[_,N]]},F.scale=function(D){return arguments.length?(I=+D,un()):I},F.translate=function(D){return arguments.length?(C=+D[0],R=+D[1],un()):[C,R]},F.center=function(D){return arguments.length?(B=D[0]%360*u.radians,$=D[1]%360*u.radians,un()):[B*u.degrees,$*u.degrees]},F.rotate=function(D){return arguments.length?(O=D[0]%360*u.radians,L=D[1]%360*u.radians,X=D.length>2?D[2]%360*u.radians:0,un()):[O*u.degrees,L*u.degrees,X*u.degrees]},F.angle=function(D){return arguments.length?(K=D%360*u.radians,un()):K*u.degrees},F.reflectX=function(D){return arguments.length?(Y=D?-1:1,un()):Y<0},F.reflectY=function(D){return arguments.length?(Z=D?-1:1,un()):Z<0},F.precision=function(D){return arguments.length?(Q=g(rn,x=D*D),ln()):(0,u.sqrt)(x)},F.fitExtent=function(D,fn){return(0,n.fitExtent)(F,D,fn)},F.fitSize=function(D,fn){return(0,n.fitSize)(F,D,fn)},F.fitWidth=function(D,fn){return(0,n.fitWidth)(F,D,fn)},F.fitHeight=function(D,fn){return(0,n.fitHeight)(F,D,fn)};function un(){var D=l(I,0,0,Y,Z,K).apply(null,h(B,$)),fn=l(I,C-D[0],R-D[1],Y,Z,K);return U=(0,e.rotateRadians)(O,L,X),rn=(0,j.default)(h,fn),V=(0,j.default)(U,rn),Q=g(rn,x),ln()}function ln(){return k=tn=null,F}return function(){return h=v.apply(this,arguments),F.invert=h.invert&&sn,un()}}},"./node_modules/d3-geo/src/rotation.js":(J,S,a)=>{a.r(S),a.d(S,{default:()=>i,rotateRadians:()=>j});var f=a("./node_modules/d3-geo/src/compose.js"),r=a("./node_modules/d3-geo/src/math.js");function o(n,t){return(0,r.abs)(n)>r.pi&&(n-=Math.round(n/r.tau)*r.tau),[n,t]}o.invert=o;function j(n,t,s){return(n%=r.tau)?t||s?(0,f.default)(u(n),e(t,s)):u(n):t||s?e(t,s):o}function P(n){return function(t,s){return t+=n,(0,r.abs)(t)>r.pi&&(t-=Math.round(t/r.tau)*r.tau),[t,s]}}function u(n){var t=P(n);return t.invert=P(-n),t}function e(n,t){var s=(0,r.cos)(n),E=(0,r.sin)(n),g=(0,r.cos)(t),y=(0,r.sin)(t);function A(m,p){var d=(0,r.cos)(p),l=(0,r.cos)(m)*d,c=(0,r.sin)(m)*d,M=(0,r.sin)(p),v=M*s+l*E;return[(0,r.atan2)(c*g-v*y,l*s-M*E),(0,r.asin)(v*g+c*y)]}return A.invert=function(m,p){var d=(0,r.cos)(p),l=(0,r.cos)(m)*d,c=(0,r.sin)(m)*d,M=(0,r.sin)(p),v=M*g-c*y;return[(0,r.atan2)(c*g+M*y,l*s+v*E),(0,r.asin)(v*s-l*E)]},A}function i(n){n=j(n[0]*r.radians,n[1]*r.radians,n.length>2?n[2]*r.radians:0);function t(s){return s=n(s[0]*r.radians,s[1]*r.radians),s[0]*=r.degrees,s[1]*=r.degrees,s}return t.invert=function(s){return s=n.invert(s[0]*r.radians,s[1]*r.radians),s[0]*=r.degrees,s[1]*=r.degrees,s},t}},"./node_modules/d3-geo/src/stream.js":(J,S,a)=>{a.r(S),a.d(S,{default:()=>u});function f(e,i){e&&o.hasOwnProperty(e.type)&&o[e.type](e,i)}var r={Feature:function(e,i){f(e.geometry,i)},FeatureCollection:function(e,i){for(var n=e.features,t=-1,s=n.length;++t<s;)f(n[t].geometry,i)}},o={Sphere:function(e,i){i.sphere()},Point:function(e,i){e=e.coordinates,i.point(e[0],e[1],e[2])},MultiPoint:function(e,i){for(var n=e.coordinates,t=-1,s=n.length;++t<s;)e=n[t],i.point(e[0],e[1],e[2])},LineString:function(e,i){j(e.coordinates,i,0)},MultiLineString:function(e,i){for(var n=e.coordinates,t=-1,s=n.length;++t<s;)j(n[t],i,0)},Polygon:function(e,i){P(e.coordinates,i)},MultiPolygon:function(e,i){for(var n=e.coordinates,t=-1,s=n.length;++t<s;)P(n[t],i)},GeometryCollection:function(e,i){for(var n=e.geometries,t=-1,s=n.length;++t<s;)f(n[t],i)}};function j(e,i,n){var t=-1,s=e.length-n,E;for(i.lineStart();++t<s;)E=e[t],i.point(E[0],E[1],E[2]);i.lineEnd()}function P(e,i){var n=-1,t=e.length;for(i.polygonStart();++n<t;)j(e[n],i,1);i.polygonEnd()}function u(e,i){e&&r.hasOwnProperty(e.type)?r[e.type](e,i):f(e,i)}},"./node_modules/d3-geo/src/transform.js":(J,S,a)=>{a.r(S),a.d(S,{default:()=>f,transformer:()=>r});function f(j){return{stream:r(j)}}function r(j){return function(P){var u=new o;for(var e in j)u[e]=j[e];return u.stream=P,u}}function o(){}o.prototype={constructor:o,point:function(j,P){this.stream.point(j,P)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}}},"./node_modules/topojson-client/src/feature.js":(J,S,a)=>{a.r(S),a.d(S,{default:()=>o,object:()=>P});function f(u,e){for(var i,n=u.length,t=n-e;t<--n;)i=u[t],u[t++]=u[n],u[n]=i}var r=a("./node_modules/topojson-client/src/transform.js");function o(u,e){return typeof e=="string"&&(e=u.objects[e]),e.type==="GeometryCollection"?{type:"FeatureCollection",features:e.geometries.map(function(i){return j(u,i)})}:j(u,e)}function j(u,e){var i=e.id,n=e.bbox,t=e.properties==null?{}:e.properties,s=P(u,e);return i==null&&n==null?{type:"Feature",properties:t,geometry:s}:n==null?{type:"Feature",id:i,properties:t,geometry:s}:{type:"Feature",id:i,bbox:n,properties:t,geometry:s}}function P(u,e){var i=(0,r.default)(u.transform),n=u.arcs;function t(m,p){p.length&&p.pop();for(var d=n[m<0?~m:m],l=0,c=d.length;l<c;++l)p.push(i(d[l],l));m<0&&f(p,c)}function s(m){return i(m)}function E(m){for(var p=[],d=0,l=m.length;d<l;++d)t(m[d],p);return p.length<2&&p.push(p[0]),p}function g(m){for(var p=E(m);p.length<4;)p.push(p[0]);return p}function y(m){return m.map(g)}function A(m){var p=m.type,d;switch(p){case"GeometryCollection":return{type:p,geometries:m.geometries.map(A)};case"Point":d=s(m.coordinates);break;case"MultiPoint":d=m.coordinates.map(s);break;case"LineString":d=E(m.arcs);break;case"MultiLineString":d=m.arcs.map(E);break;case"Polygon":d=y(m.arcs);break;case"MultiPolygon":d=m.arcs.map(y);break;default:return null}return{type:p,coordinates:d}}return A(e)}},"./node_modules/topojson-client/src/transform.js":(J,S,a)=>{a.r(S),a.d(S,{default:()=>r});function f(o){return o}function r(o){if(o==null)return f;var j,P,u=o.scale[0],e=o.scale[1],i=o.translate[0],n=o.translate[1];return function(t,s){s||(j=P=0);var E=2,g=t.length,y=new Array(g);for(y[0]=(j+=t[0])*u+i,y[1]=(P+=t[1])*e+n;E<g;)y[E]=t[E],++E;return y}}}}]);
