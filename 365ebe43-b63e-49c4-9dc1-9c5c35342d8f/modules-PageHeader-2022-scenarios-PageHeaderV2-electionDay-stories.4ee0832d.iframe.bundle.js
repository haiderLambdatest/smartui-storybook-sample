"use strict";(globalThis.webpackChunkfirecracker=globalThis.webpackChunkfirecracker||[]).push([[9828],{"./components/modules/PageHeader/2022/scenarios/PageHeaderV2.electionDay.stories.js":(c,r,a)=>{a.r(r),a.d(r,{NoCall:()=>_,ProjectedWinner:()=>E,ProjectedWinnerWithGain:()=>y,SplitPollsClose:()=>h,SplitPollsCloseWithDescription:()=>P,TooEarlyToCall:()=>m,Winner:()=>g,Zeros:()=>p,__namedExportsOrder:()=>C,default:()=>i});var t=a("./node_modules/@babel/runtime/helpers/esm/extends.js"),d=a("./node_modules/next/dist/compiled/react/index.js"),l=a("./components/modules/PageHeader/2022/PageHeaderV2.js"),n=a("./components/PageAnchor/PageAnchorContext.js"),e=a("./components/modules/PageHeader/2022/scenarios/mock.json"),s=d.createElement;const i={component:l.default,title:"Global Components/Page Header/2022/Scenarios/Election Day",parameters:{status:{type:"deprecated"}}},u=new Map(Object.entries({breakdown:{id:"breakdown",title:"County breakdown",enabled:!0},polls:{id:"polls",title:"Exit polls",enabled:!0},voted:{id:"voted",title:"How Texas voted",enabled:!0}})),o={addAnchor(){},anchors:u},h=()=>s(n.PageAnchorContext.Provider,{value:o},s(l.default,(0,t.default)({},e.electionDay.zeros,e.electionDay.splitPollsClose,{headshots:e.headshots})));h.displayName="SplitPollsClose";const P=()=>s(n.PageAnchorContext.Provider,{value:o},s(l.default,(0,t.default)({},e.electionDay.zeros,e.electionDay.splitPollsCloseIntroText,{headshots:e.headshots})));P.displayName="SplitPollsCloseWithDescription";const p=()=>s(n.PageAnchorContext.Provider,{value:o},s(l.default,(0,t.default)({},e.electionDay.zeros,{headshots:e.headshots})));p.displayName="Zeros";const _=()=>s(n.PageAnchorContext.Provider,{value:o},s(l.default,(0,t.default)({},e.electionDay.noCalls,{headshots:e.headshots})));_.displayName="NoCall";const m=()=>s(n.PageAnchorContext.Provider,{value:o},s(l.default,(0,t.default)({},e.electionDay.tooEarlyToCall,{headshots:e.headshots})));m.displayName="TooEarlyToCall";const g=()=>s(n.PageAnchorContext.Provider,{value:o},s(l.default,(0,t.default)({},e.electionDay.winner,{headshots:e.headshots})));g.displayName="Winner";const E=()=>s(n.PageAnchorContext.Provider,{value:o},s(l.default,(0,t.default)({},e.electionDay.projectedWinner,{headshots:e.headshots})));E.displayName="ProjectedWinner";const y=()=>s(n.PageAnchorContext.Provider,{value:o},s(l.default,(0,t.default)({},e.electionDay.projectedWinnerGain,{headshots:e.headshots})));y.displayName="ProjectedWinnerWithGain";const C=["SplitPollsClose","SplitPollsCloseWithDescription","Zeros","NoCall","TooEarlyToCall","Winner","ProjectedWinner","ProjectedWinnerWithGain"]},"./helpers/pluralize.js":(c,r,a)=>{a.r(r),a.d(r,{default:()=>e});var t=a("./node_modules/lodash.get/index.js"),d=a.n(t);const l=[{singular:"seat",plural:"seats"},{singular:"race",plural:"races"},{singular:"is",plural:"are"},{singular:"wins",plural:"win"},{singular:"advances",plural:"advance"},{singular:"day",plural:"days"},{singular:"delegate",plural:"delegates"},{singular:"primary",plural:"primaries"},{singular:"race",plural:"races"},{singular:"candidate",plural:"candidates"},{singular:"republican",plural:"republicans"},{singular:"democrat",plural:"democrats"},{singular:"advances",plural:"advance"},{singular:"municipality",plural:"municipalities"},{singular:"legislative district",plural:"legislative districts"},{singular:"congressional district",plural:"congressional districts"},{singular:"township",plural:"townships"},{singular:"district",plural:"districts"},{singular:"ward",plural:"wards"},{singular:"county",plural:"counties"},{singular:"superdelegate",plural:"superdelegates"}],e=(s,i)=>{if(i===1)return s;const u=l.find(({singular:o})=>o===s);return d()(u,"plural",s)}},"./lib/dayjsCustom.js":(c,r,a)=>{a.r(r),a.d(r,{dayJsCustom:()=>u});var t=a("./node_modules/dayjs/dayjs.min.js"),d=a.n(t),l=a("./node_modules/dayjs/plugin/updateLocale.js"),n=a.n(l),e=a("./node_modules/dayjs/locale/es.js"),s=a.n(e);d().extend(n());const i={en:{monthsShort:["Jan.","Feb.","March","April","May","June","July","Aug.","Sept.","Oct.","Nov.","Dec."]},es:{monthsShort:["En.","Feb.","Mar.","Abr.","May.","Jun.","Jul.","Ag.","Sept.","Oct.","Nov.","Dic."],relativeTime:{future:"en %s",past:"hace %s",s:"pocos segundos",m:"un minuto",mm:"%d minutos",h:"una hora",hh:"%d horas",d:"un d\xEDa",dd:"%d dias",M:"un mes",MM:"%d meses",y:"un a\xF1o",yy:"%d a\xF1os"}}};Object.keys(i).forEach(o=>{d().updateLocale(o,i[o])});const u=d()}}]);
